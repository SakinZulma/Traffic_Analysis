name: Build Executable for Linux, Windows, and macOS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y patchelf

      - name: Install Python dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          python -m pip install --upgrade pip
          pip install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/nightly/cpu
          pip install onnxruntime-silicon
          pip install lap numpy ultralytics opencv-python pytesseract fast_plate_ocr
          pip install pyinstaller

      - name: Install Python dependencies (Linux, Windows)
        if: runner.os != 'macOS'
        run: |
          python -m pip install --upgrade pip
          pip install lap torch torchvision torchaudio onnxruntime-gpu numpy ultralytics opencv-python pytesseract fast_plate_ocr
          pip install pyinstaller

      - name: Download models and videos
        run: |
          pip install gdown

          gdown --id 1Ft-YYXRKR9qVLmLsuamav9O5Q9dnuV8e -O models --folder
          gdown --id 1ziDzYzryaEvtB2FvitYdHCg_zYnooP1o -O videos --folder

      - name: Build executable with PyInstaller
        run: |
          pyinstaller --onefile --add-data videos:videos --add-data models:models --name=main_${{ runner.os }} main.py

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: executable-${{ runner.os }}
          path: dist/main_${{ runner.os }}*
